{
  stdenv,
  lib,
  # fetchzip,
  # autoPatchelfHook,
  fetchFromGitHub,
  makeWrapper,
  gradle_8,
  jdk11,

  alsa-lib,
  freetype,
  libz,
  xorg,

  fontconfig,
  dejavu_fonts,

  adda,
}:
let
  gradle = gradle_8;
in
stdenv.mkDerivation (finalAttrs: {
  pname = "adda-gui";
  version = "0.9.6";

  src = fetchFromGitHub {
    owner = "adda-team";
    repo = finalAttrs.pname;
    tag = "v${finalAttrs.version}";
    hash = "sha256-47ob8aiIajuKtsIeE6fuJyYWURLf1SI/9Xb41zfAfw8=";
  };
  # src = fetchzip (
  #   let
  #     inherit (finalAttrs) version;
  #   in
  #   {
  #     url = "https://github.com/adda-team/adda-gui/releases/download/v${version}/adda-gui_${version}_linux.zip";
  #     hash = "sha256-OasLEHMaikCfpIFuxX6V827WKTTx9ZKgcNor5TUY3yE=";
  #   }
  # );

  nativeBuildInputs = [
    # autoPatchelfHook
    makeWrapper
    gradle
    jdk11
  ];

  buildInputs =
    (with xorg; [
      libXext
      libXrender
      libXtst
    ])
    ++ [
      alsa-lib
      freetype
      libz
      adda

      fontconfig
      dejavu_fonts
    ];

  mitmCache = gradle.fetchDeps {
    pkg = finalAttrs.finalPackage;
    data = ./deps.json;
  };

  gradleFlags = [ "-Dorg.gradle.java.home=${jdk11}" ];
  gradleBuildTask = "installDist";

  patchPhase = ''
    runHook prePatch
    # Fix obsolete 'compile' keyword for dependencies
    sed -i 's/\bcompile\b/implementation/g' build.gradle
    # Add the application plugin to make 'installDist' available
    sed -i "/plugins {/a id 'application'" build.gradle
    # Define the main class for the application plugin
    sed -i "/^group =/a mainClassName = 'adda.Main'" build.gradle
    runHook postPatch
  '';

  installPhase = ''
    runHook preInstall

    # The installDist task creates a perfect FHS-like layout for us in build/install/adda-gui.
    # It contains bin/ and lib/ subdirectories. We just copy the whole thing.
    mkdir -p $out
    cp -r build/install/adda-gui/* $out/

    # Now, wrap the script that was generated by Gradle to ensure it
    # uses the correct JRE at runtime by setting JAVA_HOME.
    makeWrapper $out/bin/adda-gui $out/bin/.adda-gui-wrapped \
      --set JAVA_HOME ${jdk11}

    # Overwrite the original script with our wrapped version
    mv $out/bin/.adda-gui-wrapped $out/bin/adda-gui

    runHook postInstall
  '';

  # installPhase = ''
  #   runHook preInstall

  #   # ls -la .
  #   # install "." -Dm755 -t "$out"
  #   mkdir -p "$out"
  #   cp -r ./* "$out"

  #   runHook postInstall
  # '';

  meta = with lib; {
    homepage = "https://github.com/adda-team/adda-gui";
    description = "Graphical user interface for ADDA";
    license = licenses.gpl3;
    platforms = [ "x86_64-linux" ];
    maintainers = with maintainers; [ arunoruto ];
    # mainProgram = binaryName;
  };
})
