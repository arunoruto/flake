name: Validate Nix Flake

on:
  workflow_dispatch:
  push:
    paths:
      - "**.nix"
      - "flake.nix"
      - "flake.lock"
      - ".github/workflows/check.yaml"

jobs:
  check-lock:
    name: Check Lock
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1
      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@main

  check-flake:
    name: Check Flake
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [check-lock]
    # strategy:
    #   fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          logger: pretty
      # - name: Cache
      #   uses: DeterminateSystems/flakehub-cache-action@main
      - name: Check Flake
        run: nix flake check --accept-flake-config
        # run: |
        #   NIXPKGS_ALLOW_INSECURE=1
        #   nix flake check
        #   --no-build
        #   --impure
        # --show-trace
        # run: NIXPKGS_ALLOW_INSECURE=1 nix flake check --no-build --accept-flake-config --impure
        # run: NIXPKGS_ALLOW_INSECURE=1 nix flake check --accept-flake-config --impure
      - name: Flake Statistics
        run: |
          echo "## Tokei Summary" >> $GITHUB_STEP_SUMMARY
          nix run nixpkgs#tokei >> $GITHUB_STEP_SUMMARY

  # check-flake-debug:
  #   name: Check Flake (debug mode)
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   needs: [check-flake]
  #   if: ${{ failure() }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         fetch-depth: 1
  #     - name: Install Nix
  #       uses: DeterminateSystems/nix-installer-action@main
  #       with:
  #         logger: pretty
  #     - name: Cache
  #       uses: DeterminateSystems/flakehub-cache-action@main
  #     - name: Check Flake
  #       run: nix flake check --accept-flake-config --debug
